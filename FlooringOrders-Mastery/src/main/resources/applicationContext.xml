<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/mvc
          http://www.springframework.org/schema/mvc/spring-mvc.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/aop  
          http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <!-- Bean definitions go here -->
    <bean id = "UserIO" class = "FlooringOrdersUI.UserIOImpl"/> 
    <bean id = "myView" class = "FlooringOrdersUI.View">
        <constructor-arg ref = "UserIO"/> 
    </bean>
    
    <bean id = "myDao" class = "FlooringOrdersDAO.ProductionDaoFileImpl"/>
    <bean id = "myDaoTraining" class = "FlooringOrdersDAO.TrainingDaoImpl"/> <!--Training Dao-->
    
    <bean id = "myAuditDao" class = "FlooringOrdersDAO.FlooringOrderAuditDaoFileImpl" />
    
    <bean id = "myService" class = "FlooringOrdersServiceLayer.ServiceImpl">
        <constructor-arg ref = "myDao"/>
        <constructor-arg ref = "myAuditDao"/>
    </bean>
    
    <bean id = "myServiceTraining" class = "FlooringOrdersServiceLayer.ServiceImpl"> <!--Training Service Layer -->
        <constructor-arg ref = "myDaoTraining"/> <!--Passing in the myDaoTraining bean -->
        <constructor-arg ref = "myAuditDao"/>
    </bean>
        
        
        
    <bean id = "productionController" class = "FlooringOrdersController.Controller"> 
        <constructor-arg ref = "myView"/>
        <constructor-arg ref = "myService"/>
    </bean>
    
    <bean id = "trainingController" class = "FlooringOrdersController.Controller"> <!--Training Controller-->
        <constructor-arg ref = "myView"/>
        <constructor-arg ref = "myServiceTraining"/>
    </bean>

    <bean id="loggingAdvice" class="FlooringOrdersAdvice.LoggingAdvice">
        <constructor-arg ref="myAuditDao"/>
    </bean>
    
    <aop:config>
  <aop:aspect ref="loggingAdvice">
      <aop:after-returning
          method="createAuditEntry"
          pointcut="execution(* FlooringOrdersServiceLayer.ServiceImpl.addOrder(..))"
       />
         
      <!-- Created an after-throwing aop an pointed it to run this method-->
      <aop:after-throwing
          method="createExceptionThrownEntry"
          pointcut="execution(* FlooringOrdersServiceLayer.ServiceImpl.justSaveToFile(..))"
      />
           
    </aop:aspect>
</aop:config>

</beans>